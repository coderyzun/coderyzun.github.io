<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 「Yang&#39;zun」的网志博客</title>
    <link>https://cdryzun.github.io/post/</link>
    <description>Recent content in Posts on 「Yang&#39;zun」的网志博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2021 11:02:00 +0800</lastBuildDate><atom:link href="https://cdryzun.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jira &amp; confluence 安装 并 配置 破解激活</title>
      <link>https://cdryzun.github.io/post/jira-install/</link>
      <pubDate>Sun, 21 Feb 2021 11:02:00 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/jira-install/</guid>
      <description>环境说明 操作系统: Centos 安装 Jira 版本: 8.13.4 使用数据库: Mysql 5.7 jdk 版本: openjdk 1.8 官方 jira 最新版本查看地址 环境初始化 安装 jdk 1 2 3 4 5 6 yum install -y java-1.8.0-openjdk [root@jira ~]# java -version openjdk version &amp;#34;1.8.0_282&amp;#34; OpenJDK Runtime Environment</description>
    </item>
    
    <item>
      <title>VMware ESXi Clone 复制虚拟机</title>
      <link>https://cdryzun.github.io/post/exsi-clone-hosts/</link>
      <pubDate>Sun, 21 Feb 2021 10:09:38 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/exsi-clone-hosts/</guid>
      <description>环境说明 vmware exsi 版本: 6.7 被克隆虚拟机机: centos-source 目标克隆主机: jira-confluence 虚拟机文件路径: /vmfs/volumes/1t-data/centos-7-source 具体步骤 exis 开启 ssh 远程管理 开启远程管理后，使用 工具进行终端连接 复制源磁</description>
    </item>
    
    <item>
      <title>使用 斐讯n1 &amp; openWrt 搭建 k3s 集群</title>
      <link>https://cdryzun.github.io/post/n1-openwrt-k3s-deploy/</link>
      <pubDate>Tue, 26 Jan 2021 09:26:39 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/n1-openwrt-k3s-deploy/</guid>
      <description>环境说明 软件说明 K3s version : v1.19.7+k3s1 Docker version: 19.03.13 (n1)，19.03.12 (openwrt) 写盘工具: balenaEtcher 机器说明 IP 地址 机型 配置 操作系统 角色 192.168.8.1 占美 (机型不详) 4c 2g ( cpu N2940 ) ope</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中部署 nfs storageClass</title>
      <link>https://cdryzun.github.io/post/k8s-nfs-strage-class/</link>
      <pubDate>Tue, 19 Jan 2021 14:54:30 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/k8s-nfs-strage-class/</guid>
      <description>环境说明： helm version: v3.4.2 kubernetes version: v1.19.6 nfs server: 192.168.8.66 sub-net: 192.168.8.0/24 nfs 服务端配置 1 2 3 4 5 6 yum install rpcbind nfs-utils -y mkdir -p /data/nfs.sharedir chown -R nfsnobody /data/nfs.sharedir 创建用户 &amp;amp; 数据目录 1 2 3 4 5 6 7 8 9 groupadd -g 2233 nfs-user useradd nfs-user -M -s /sbin/nologin -u 2233 -g</description>
    </item>
    
    <item>
      <title>使用 Confluentinc 在 Kubernetes 集群中部署 Kafka 集群 </title>
      <link>https://cdryzun.github.io/post/k8s-deploy-kafka-cluster/</link>
      <pubDate>Tue, 19 Jan 2021 13:44:03 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/k8s-deploy-kafka-cluster/</guid>
      <description>部署说明 kafka &amp;amp; zookeeper 集群部署工具: confluentinc 使用 helm 进行部署，并部署一个外置的 kafka 管理工具。 环境说明 kubernetes version: v1.17.4 helm version: v3.3.1 traefik version: v2.3.6 docker version: 18.09.6 k8s strage class: nfs kafka dashboard: kafka-manager 集群部署 Helm 应用下载 1</description>
    </item>
    
    <item>
      <title>初探 Traefik ingress gateway</title>
      <link>https://cdryzun.github.io/post/ingress-traefik/</link>
      <pubDate>Sun, 17 Jan 2021 16:15:32 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/ingress-traefik/</guid>
      <description>Traefik 基础概念说明 Traefik 是一个 开源 的边缘路由器，使发布服务变得有趣而轻松，是你整个平台的大门，拦截并匹配每一个传入的请求：它掌管着所有的匹配逻辑和路</description>
    </item>
    
    <item>
      <title>Rancher 单机部署，进行升级后，导致docker无法正常启动</title>
      <link>https://cdryzun.github.io/post/rancher-upgrade-docker/</link>
      <pubDate>Sat, 16 Jan 2021 14:39:59 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/rancher-upgrade-docker/</guid>
      <description>环境说明 操作系统: Centos 7.9.2009 Docker Version: 18.09.9 模拟复现 rancher 安装 1 2 3 4 5 6 7 8 docker pull rancher/rancher:v2.3.5 docker run -d \ --restart=unless-stopped \ --name rancher \ -p 80:80 -p 443:443 \ --privileged \ rancher/rancher:v2.3.5 升级 rancher 示例将 v2.3.5 升级至 v2.5.0 创建备份 1 2 3 4 5 docker</description>
    </item>
    
    <item>
      <title>记录一次，因误删容器导致的容器恢复过程</title>
      <link>https://cdryzun.github.io/post/delete-container-reset/</link>
      <pubDate>Thu, 14 Jan 2021 20:09:58 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/delete-container-reset/</guid>
      <description>环境说明 因在日常维护过程中升级了docker的版本 ，碰到了一个 docker 的一个 bug, 导致 docker 服务无法正常启动。在恢复 docker 服务的过程中把 /var/lib/docker/containers 下的所有文件给 清空 了</description>
    </item>
    
    <item>
      <title>Coredns 进行解析域名时，某些域名出现间断性无法正常解析问题</title>
      <link>https://cdryzun.github.io/post/intermittent-coredns-hosts/</link>
      <pubDate>Thu, 07 Jan 2021 14:34:16 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/intermittent-coredns-hosts/</guid>
      <description>问题描述: Kubernetes 节点中，有一台节点使用 coredns 进行解析某个域名时，出现间断性无法正常解析问题，而解析另外一个域名时不会出现解析问题。 再次重复一下问题重</description>
    </item>
    
    <item>
      <title>使用 Docker 部署 Nexus3 私服的详细记录总结</title>
      <link>https://cdryzun.github.io/post/docker-deploy-nexus3-upgrade/</link>
      <pubDate>Tue, 22 Dec 2020 09:24:55 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/docker-deploy-nexus3-upgrade/</guid>
      <description>Nexus3.x 说明 功能介绍 Nexus3, 是一款支持仓库种类繁多的私服管理工具，目前大众所知晓的仓库类型如：go、pypi、docker、maven、yum、git、</description>
    </item>
    
    <item>
      <title>部署 Nginx-Ingress 并配置暴露 kubernetes dashboard</title>
      <link>https://cdryzun.github.io/post/ingress-to-dashboard/</link>
      <pubDate>Tue, 22 Dec 2020 09:24:55 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/ingress-to-dashboard/</guid>
      <description>环境说明 链接文档 软件版本说明 helm: v3.4.2 ingress: v3.16.1 Nginx Ingress 参考文档 安装 1 2 3 4 wget https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz tar xf helm-v3.4.2-linux-amd64.tar.gz \ &amp;amp;&amp;amp; cp linux-amd64/helm /usr/local/bin/ 添加helm命令补全 1 2 helm completion bash \ &amp;amp;&amp;amp; helm completion bash &amp;gt; /etc/bash_completion.d/helm 添加 ingress repo 1 2 3 helm</description>
    </item>
    
    <item>
      <title>Kubeadm 部署 kubernetes-v1.19.x 集群</title>
      <link>https://cdryzun.github.io/post/kubeadm-deploy-k8s1.9/</link>
      <pubDate>Mon, 21 Dec 2020 13:19:31 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/kubeadm-deploy-k8s1.9/</guid>
      <description>系统环境说明 使用操作系统: Centos-7.9.2009 操作系统内核版本: 4.4.248 (lt) Docker容器版本: 18.09.9 Kubeadm 版本: 1.19.6 节点说明: master01: 192.168.8.70 ,192.168.88.70 node01: 192.168.8.71 ,192.168.88.71 (备注: 为每个节点配置了两个ip，</description>
    </item>
    
    <item>
      <title>Centos7 安装之后必要的初始化操作</title>
      <link>https://cdryzun.github.io/post/centos-init-config/</link>
      <pubDate>Mon, 21 Dec 2020 09:34:01 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/centos-init-config/</guid>
      <description>⚠️ 注意此些操作在Centos7中得到验证且可行，其他发行版本请自己尝试 OS 调优 内核优化 ⚠️ 请更具实践业务场景进行调整，此示例中较适合kube</description>
    </item>
    
    <item>
      <title>kubernetes集群中 controller-manager 及 scheduler 组件频繁发生重启的一次排查解决</title>
      <link>https://cdryzun.github.io/post/flannel-exclusion-records/</link>
      <pubDate>Fri, 18 Dec 2020 16:24:43 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/flannel-exclusion-records/</guid>
      <description>环境说明 Kubernetes 版本: v1.19.6 使用操作系统: Centos-7.9.2009 现象说明 最近在使用k8s集群的时候，发现集群变慢了许多，排查发现 master 节点中 controller-manager 及 scheduler 组件频繁的发生重启 排查记录 抓</description>
    </item>
    
    <item>
      <title>Docker Quickstart Redis Server</title>
      <link>https://cdryzun.github.io/post/docker-quickstart-redis/</link>
      <pubDate>Mon, 30 Nov 2020 10:35:47 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/docker-quickstart-redis/</guid>
      <description>环境说明: 系统镜像: Redis:5.x （示例容器为: redis:5.0.4 ） 操作系统: Centos Docker 版本: 19.03.8 具体实现步骤 操作系统简单优化 1 2 3 4 5 6 echo &amp;#39;vm.overcommit_memory=1 net.core.somaxconn=65535&amp;#39; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enable 下载容器 1 docker pull redis:5.0.4</description>
    </item>
    
    <item>
      <title>Docker 部署多网口软路由</title>
      <link>https://cdryzun.github.io/post/openwrt-docker-multi-net/</link>
      <pubDate>Thu, 19 Nov 2020 17:56:52 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/openwrt-docker-multi-net/</guid>
      <description>环境说明: 操作系统: Centos 7.8.2003 内核版本: 4.14.129-bbrplus Docker 版本: 19.03.12 使用 Docker 镜像: raymondwong/openwrt_r9:20.1.24-x86_64 网卡说明: 板载螃蟹网卡、绿联 usb3.0 千M 网卡 系统网卡配置 将对应网卡启动混淆模式 1 2 3 4</description>
    </item>
    
    <item>
      <title>斐讯N1 docker部署 openwrt系统的使用记录</title>
      <link>https://cdryzun.github.io/post/n1-docker/</link>
      <pubDate>Sun, 15 Nov 2020 16:09:10 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/n1-docker/</guid>
      <description>openWRT 系统无法与宿主机通信问题解决 参考文档 环境说明 小钢炮宿主机 IP：192.168.8.102 Docker 内 openWRT macvlan ip: 192.168.8.111 主路由网关：192.168.8.1 机器</description>
    </item>
    
    <item>
      <title>Kind 部署本地k8s集群的使用记录</title>
      <link>https://cdryzun.github.io/post/first-kind/</link>
      <pubDate>Sun, 15 Nov 2020 14:24:42 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/first-kind/</guid>
      <description>参考资料 Github 地址 参考博客 安装 1 2 3 curl -Lo ./kind &amp;#34;https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64&amp;#34; chmod +x ./kind mv ./kind /some-dir-in-your-PATH/kind 启动集群 注意启动集群前 请确认 docker 服务是否启动 1 2 3 4 5 6 7 8 9 10 11 12 docker info|grep -A 2 Server # 确认 是否启</description>
    </item>
    
  </channel>
</rss>
